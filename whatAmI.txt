PowCal is a calendar program that is built to be extremely hackable through a scripting
language...kind of a programmer's dream tool..it should also have some sort of analyitcal
tooling/intelligence to mimic/extend scheduling behavior that is similar to ToMeet

the benefits of PowCal is that using a programmar's mindset you don't need to edit every entry
independently instead you can use stuff like RegExp to perform batch-type changes or the intelligence
toolset it provides to get information about your life after it has enough data on it (how many
hours are you excercising per week? are you using all your vacation days this year? how often are
you sick? how many hours per week do you spend with your girlfriend?)

-how many hours of work do you have left to schedule? (in the instance that you are a freelancer
trying to fill 80 hours of freelance work per week, or some hybrid)

-scripting new alerts (the intelligence behind this is how smart the program is at looking at the
database and understanding the objects within...like what is a doctors appointments versus playing
ball with sunny besides the fact that they are both events scheduled) or using/extending some of the
basic built-in alerts

a keen way of looking at the program from a power client's point of view is that the
scripting/commands available basically emulate a secretary (so like a boss asking his secretary to
schedule a meeting at the best time, or to give a time/date for "dentist appointment", or questions
like those above)

technology(most will be ignored early in the interest of early functionality and the cost of lots of
recoding and backtracking):

<SomeGUI>
Linux (it may be possible to avoid a platform lock by exposing python to the user instead of
	communicating with the linux shell - but this seems a huge overkill as a tool to communicate
	with the calendar and more work on the GUI because little chance of the GUI work being platform
	independent first time through) - probably lots of other complications during development as
	well
	-this project is small enough that simply rebuilding it as a platform independent version is
	a worthwhile goal at a later date...it seems to be something that is unnecessary now and would only
	prevent main goals from being achieved (great risk little reward, plus reward can be claimed later
	regardless)
	-for now the linux shell will provide access for the user to use and communicate with the
	calendar

pow questions:
how many appointments scheduled in (date, days months or years)
how many dentist appointments
how many hours of video games
how many free hours
how many hours left to fill with work
how many vacations days per year, how many left
how many hours of exercise per week, how many per day on avg?
